# -*- coding: utf-8 -*-
"""Object_v3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1A1uWg4NN8qIv72w9mZyi63TetLzR5vMb
"""

pip install google-cloud-vision

from google.colab import drive
drive.mount('/content/drive')

import os
from google.colab import files
import io
from google.cloud import vision

from PIL import Image, ImageDraw

def google_vision():
    uploaded = files.upload()
    for filename in uploaded.keys():
      # print(os.path.abspath(filename))
      path1 = os.path.abspath(filename)

    # =====================8**************8==================


    os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = r'/content/drive/MyDrive/mlproto-2023-c524b0134bda.json' #path json key of google project to access vision api
    # Instantiates a client
    client = vision.ImageAnnotatorClient()
    file_name = os.path.abspath(path1)
    # Loads the image into memory
    with io.open(file_name, 'rb') as image_file:
        content = image_file.read()

    image = vision.Image(content=content)


    # ============Request Object detection=================

    response = client.object_localization(image=image)

    # Extract the object annotations from the response
    objects = response.localized_object_annotations

    # Print the object annotations
    object_count = 0
    for object_ in objects:
        print(object_.name)
        object_count = object_count +1
        # print(object_.bounding_poly.normalized_vertices)

    obj_arr = [0]*object_count   
    k = 0
    for object_ in objects:
        obj_arr[k] = object_.name
        k = k + 1

    # ============Request Object detection=================

    # ============Draw a box around each object=================
    image1 = Image.open(path1)

    w,h = image1.size

    draw = ImageDraw.Draw(image1)
    
    for object_ in objects:
        vertices = object_.bounding_poly.normalized_vertices
        draw.rectangle([(vertices[0].x*w, vertices[0].y*h), (vertices[2].x*w, vertices[2].y*h)], outline=(255,0,0))

    # Save the image with the boxes drawn
    image1.save('/content/image_box.jpg')
    # draw.save('/content/image_box.jpg')
    print('Number of objects detected' , object_count )
    # ============Draw a box around each object=================



    # Performs label detection on the image file
    response = client.label_detection(image=image)
    labels = response.label_annotations

    print('Labels (and confidence score):')
    print('=' * 30)
    i = 0

    for label in response.label_annotations:
        print(label.description, '(%.2f%%)' % (label.score*100.))
        i = i +1

    print(i)
    arr = [0]*i
    j = 0 

    for label in response.label_annotations:
        arr[j] = label.description
        j = j +1
    return obj_arr,arr

obj_arr,arr = google_vision()

print(obj_arr)

print(arr) #print detected objects

